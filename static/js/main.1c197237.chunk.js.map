{"version":3,"sources":["utils/courses.js","welcome_page/index.jsx","index.jsx","res/icon.svg","res/calendar-step-1.png","res/calendar-step-2.png"],"names":["getCourseCode","classInfo","undefined","subject","catalog_number","snackbarWarningText","theme","createMuiTheme","palette","primary","main","blue","light","dark","WelcomePage","props","validate","nameFromCode","originalName","sortedUniqueNameFromCode","_","uniq","sort","sortedOriginalCode","isEqual","setState","dialogOpen","console","log","showSnackbar","loadCourseInfo","courseCodes","courseNames","fullPageOverlayOpen","instance","axios","create","baseURL","timeout","promises","map","code","get","params","key","process","all","then","values","subjectNamsFromCourseCodes","value","data","info","includes","catch","error","message","parseCourses","rawCourses","classNumbers","match","x","substring","length","parseInt","snackbarTheme","snackbarText","snackbarOpen","hideSnackbar","event","reason","handleDialogClose","handleRawCoursesInputChange","handleNextStepClick","state","handleEmailAddressChange","val","questId","handleSubmitClick","post","id","sections","response","handlePaste","this","ThemeProvider","Box","p","CssBaseline","Snackbar","open","onClose","anchorOrigin","vertical","horizontal","Alert","severity","src","logo","alt","className","Grid","container","justify","spacing","item","xs","md","lg","Card","raised","CardHeader","title","CardContent","Typography","variant","Link","href","target","CardMedia","image","step1","step2","style","display","flexDirection","height","mb","TextField","onPaste","e","clipboardData","getData","multiline","required","fullWidth","rows","onChange","CardActions","width","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","label","InputProps","endAdornment","InputAdornment","position","DialogActions","Button","onClick","color","Backdrop","zIndex","drawer","CircularProgress","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"8eA+CMA,EAAgB,SAACC,GACrB,YAAqBC,IAAdD,EAA0B,KAA1B,UAAoCA,EAAUE,QAA9C,YAAyDF,EAAUG,iB,mDC5BtEC,EAAsB,4FAEtBC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAK,KACXC,MAAO,UACPC,KAAM,cAkRGC,E,YA5Qb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAaRC,SAAW,SAACC,EAAcC,GACxB,IAAMC,EAA2BC,IAAEC,KAAKJ,GAAcK,OAChDC,EAAqBL,EAAaI,OACpCF,IAAEI,QAAQL,EAA0BI,GACtC,EAAKE,SAAS,CAAEC,YAAY,KAE5BC,QAAQC,IAAI,8DACZ,EAAKC,aAAa,UAAWxB,KArBd,EAyBnByB,eAAiB,SAACC,EAAaC,GAE7B,EAAKP,SAAS,CAAEQ,qBAAqB,IACrC,IAAMC,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,sCACTC,QAJc,MAMVC,EAAWR,EAAYS,KAAI,SAACC,GAAD,OAAUP,EAASQ,IAAT,WAAiBD,EAAjB,kBAAuC,CAChFE,OAAQ,CACNC,IAjDOC,yCAoDXV,IAAMW,IAAIP,GAAUQ,MAAK,SAACC,GACxB,IACMC,EADaD,EAAOR,KAAI,SAACU,GAAD,OAAWA,EAAMC,KAAKA,QACNX,KAAI,SAACY,GAEjD,OADoBpD,EAAcoD,EAAK,OAGzC,EAAK3B,SAAS,CAAEQ,qBAAqB,IACjCgB,EAA2BI,SAAS,OACtC1B,QAAQC,IAAI,+CACZ,EAAKC,aAAa,UAAWxB,IAE7B,EAAKW,SAASiC,EAA4BjB,MAE3CsB,OAAM,SAACC,GACJA,EAAMC,UAAN,qBAzBU,IAyBV,eACF,EAAK3B,aAAa,QAAS,gFAE3B,EAAKA,aAAa,QAAS0B,EAAMC,SAEnC7B,QAAQC,IAAI2B,GACZ,EAAK9B,SAAS,CAAEQ,qBAAqB,QAzDtB,EA6DnBwB,aAAe,SAACC,GACd,IAAMC,EAAeD,EAAWE,MAAM,aAChC5B,EAAc0B,EAAWE,MAAM,gCAAgCpB,KAAI,SAACqB,GAAD,OAAOA,EAAEC,UAAU,EAAGD,EAAEE,OAAS,MAC1G,GAAIL,EAAWE,MAAM,aAAaG,SAAWJ,EAAaI,OAGxD,OAFApC,QAAQC,IAAI,kEACZ,EAAKC,aAAa,UAAWxB,GAG/B,EAAKoB,SAAS,CAAEM,YAAa4B,EAAanB,KAAI,SAACqB,GAAD,OAAOG,SAASH,EAAG,SACjE,EAAK/B,eAAe6B,EAAc3B,IAtEjB,EAyEnBH,aAAe,SAACoC,EAAeC,GAC7B,EAAKzC,SAAS,CAAEwC,gBAAeC,eAAcC,cAAc,KA1E1C,EA6EnBC,aAAe,SAACC,EAAOC,GACN,cAAXA,GAGJ,EAAK7C,SAAS,CAAE0C,cAAc,KAjFb,EAoFnBI,kBAAoB,WAClB,EAAKH,eACL,EAAK3C,SAAS,CAAEC,YAAY,EAAOgC,WAAY,MAtF9B,EAyFnBc,4BAA8B,SAACd,GAC7B,EAAKjC,SAAS,CAAEiC,gBA1FC,EA6FnBe,oBAAsB,WACpB,EAAKL,eADqB,IAElBV,EAAe,EAAKgB,MAApBhB,WACR,IACE,EAAKD,aAAaC,GAClB,MAAOH,GACP5B,QAAQC,IAAI2B,GACZ,EAAK1B,aAAa,UAAWxB,KApGd,EAwGnBsE,yBAA2B,SAACC,GAC1B,EAAKnD,SAAS,CAAEoD,QAASD,KAzGR,EA4GnBE,kBAAoB,WAClB,IADwB,EAES,EAAKJ,MAA9BG,EAFgB,EAEhBA,QAAS9C,EAFO,EAEPA,YACjB,GAAK8C,EAAL,CAIA,EAAKpD,SAAS,CAAEQ,qBAAqB,IAErCE,IAAM4C,KADM,kFACI,CACdC,GAAIH,EACJI,SAAUlD,GAEZ,CACEO,QAbc,MAcbS,MAAK,SAACmC,GACPvD,QAAQC,IAAIsD,GACZ,EAAKrD,aAAa,UAAW,gEAC7B,EAAKJ,SAAS,CAAEQ,qBAAqB,OACpCqB,OAAM,SAACC,GACJA,EAAMC,UAAN,qBAnBU,IAmBV,eACF,EAAK3B,aAAa,QAAS,2DAE3B,EAAKA,aAAa,QAAS0B,EAAMC,SAEnC7B,QAAQC,IAAI2B,GACZ,EAAK9B,SAAS,CAAEQ,qBAAqB,OAEvC,EAAKsC,yBAxBH,EAAK1C,aAAa,UAAW,mCAhHd,EA2InBsD,YAAc,SAACzB,GACb,EAAKU,eACLzC,QAAQC,IAAI8B,GACZ,EAAKjC,SAAS,CAAEiC,eAChB,IACE,EAAKD,aAAaC,GAClB,MAAOH,GACP5B,QAAQC,IAAI2B,GACZ,EAAK1B,aAAa,UAAWxB,KAjJ/B,EAAKqE,MAAQ,CACXhB,WAAY,GACZS,cAAc,EACdlC,qBAAqB,EACrBP,YAAY,EACZmD,QAAS,GACT9C,YAAa,GACbkC,cAAe,GACfC,aAAc,IAVC,E,sEAuJT,IAAD,SAGHkB,KAAKV,MADPP,EAFK,EAELA,aAAclC,EAFT,EAESA,oBAAqBP,EAF9B,EAE8BA,WAAYuC,EAF1C,EAE0CA,cAAeC,EAFzD,EAEyDA,aAAcR,EAFvE,EAEuEA,WAG9E,OACE,kBAAC2B,EAAA,EAAD,CAAe/E,MAAOA,GACpB,kBAACgF,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,KAAMvB,EACNwB,QAASP,KAAKhB,aACdwB,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAE7C,kBAACC,EAAA,EAAD,CAAOC,SAAU/B,EAAe0B,QAASP,KAAKhB,cAC3CF,IAGL,yBAAK+B,IAAKC,IAAMC,IAAI,OAAOC,UAAU,SAErC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACxC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAMT,UAAU,OAAOU,QAAM,GAC3B,kBAACC,EAAA,EAAD,CAAYC,MAAM,SAASZ,UAAU,WACrC,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,YAEE,kBAACC,EAAA,EAAD,CAAMC,KAAK,+EAA+EC,OAAO,UAAjG,SAFF,oCAMF,kBAACC,EAAA,EAAD,CACEC,MAAOC,IACPT,MAAM,uBACNZ,UAAU,eAIhB,kBAACC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAMT,UAAU,OAAOU,QAAM,GAC3B,kBAACC,EAAA,EAAD,CAAYC,MAAM,SAASZ,UAAU,WACrC,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,2CAEF,kBAACI,EAAA,EAAD,CACEC,MAAOE,IACPV,MAAM,sBACNZ,UAAU,eAIhB,kBAACC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAMC,QAAM,EAACa,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,OAAQ,SACtE,kBAACf,EAAA,EAAD,CAAYC,MAAM,SAASZ,UAAU,WACrC,kBAACa,EAAA,EAAD,KACE,kBAAC3B,EAAA,EAAD,CAAKyC,GAAI,GACP,kBAACb,EAAA,EAAD,CAAYC,QAAQ,SAApB,8BAEF,kBAACa,EAAA,EAAD,CACE9E,MAAOQ,EACPuE,QAAS,SAACC,GAAD,OAAO,EAAK/C,YAAY+C,EAAEC,cAAcC,QAAQ,gBACzDC,WAAS,EACTC,UAAQ,EACRnB,QAAQ,WACRoB,WAAS,EACTC,KAAM,GACNC,SAAU,SAACP,GAAD,OAAO,EAAK1D,4BAA4B0D,EAAEZ,OAAOpE,WAI/D,kBAACwF,EAAA,EAAD,CAAatC,UAAU,gBACrB,kBAACd,EAAA,EAAD,CAAKC,EAAG,EAAGoD,MAAO,GAChB,kBAACC,EAAA,EAAD,CAAQlD,KAAMhE,EAAYiE,QAASP,KAAKb,kBAAmBsE,kBAAgB,qBACzE,kBAACC,EAAA,EAAD,CAAa9D,GAAG,qBAAhB,UACA,kBAAC+D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iEAGA,kBAAChB,EAAA,EAAD,CACEiB,WAAS,EACTC,OAAO,QACPlE,GAAG,OACHmE,MAAM,gBACNZ,WAAS,EACTa,WAAY,CAAEC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,kBAC5Bd,SAAU,SAACP,GAAD,OAAO,EAAKvD,yBAAyBuD,EAAEZ,OAAOpE,WAG5D,kBAACsG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAStE,KAAKb,kBAAmBoF,MAAM,WAA/C,UAGA,kBAACF,EAAA,EAAD,CAAQC,QAAStE,KAAKN,kBAAmB6E,MAAM,WAA/C,kBAWhB,kBAACC,EAAA,EAAD,CACEjC,MAAO,CACLkC,OAAQvJ,EAAMuJ,OAAOC,OAAS,EAC9BH,MAAO,QAETjE,KAAMzD,GAEN,kBAAC8H,EAAA,EAAD,CAAkBJ,MAAM,kB,GAtQRK,IAAMC,WC5BhCC,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U,mBCJzDC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.1c197237.chunk.js","sourcesContent":["import _ from 'lodash';\n\n/**\n * @typedef {{ courseCode: string, keepable: boolean, keep: boolean }} CurrentCourse\n */\n\n/**\n * @typedef {Object} ClassInfo\n * @property {string} subject\n * @property {number} catalog_number\n * @property {number} class_number\n * @property {number} associated_class\n * @property {string} section\n * @property {string} campus\n * @property {ClassTimeInfo[]} classes\n */\n\n/**\n * @typedef {Object} ClassTimeInfo\n * @property {ClassDate} date\n * @property {{building: string, room: string}} location\n * @property {string[]} instructors\n*/\n\n/**\n * @typedef {Object} ClassDate\n * @property {string} start_time\n * @property {string} end_time\n * @property {string} weekdays\n * @property {boolean} is_tba\n * @property {boolean} is_cancelled\n * @property {boolean} is_closed\n */\n\n/**\n * Determines whether two classes are associated.\n * @param {ClassInfo} classInfo1 the ClassInfo object to compare.\n * @param {ClassInfo} classInfo2 the other ClassInfo object to compare.\n */\nconst areAssociated = (classInfo1, classInfo2) => (\n  classInfo1.associated_class === classInfo2.associated_class\n);\n\n/**\n * Returns the course code of a class.\n * @param {ClassInfo} classInfo the ClassInfo object to get course code from.\n */\nconst getCourseCode = (classInfo) => {\n  return classInfo === undefined ? null : `${classInfo.subject} ${classInfo.catalog_number}`;\n};\n\n/**\n * Determines whether a class in online or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isOnline = (classInfo) => classInfo.campus === 'ONLN ONLINE';\n\n/**\n * Determines whether a class in closed or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isClosed = (classInfo) => classInfo.classes.some((value) => value.date.is_closed);\n\n/**\n * Formats data for use in back-end.\n * @param {CurrentCourse[]} currentCourses the list of current courses.\n * @param {number[]} currentClasses the list of current class numbers.\n * @param {ClassInfo[][]} courseInfo the courses information obtained from API.\n */\nconst formatPostData = (currentCourses, currentClasses, courseInfo) => {\n  const currentCoursesDict = _.keyBy(currentCourses, 'courseCode');\n\n  const filteredCourseInfo = courseInfo.map((course) => {\n    let filtered = course.filter((s) => !isClosed(s) && !isOnline(s));\n    const keepUnchanged = currentCoursesDict[getCourseCode(course[0])].keep;\n    if (keepUnchanged) {\n      filtered = filtered.filter((section) => currentClasses.includes(section.class_number));\n    }\n    const filteredSet = _.uniqWith(filtered, (a, b) => {\n      if (a.associated_class !== b.associated_class) {\n        return false;\n      }\n      if (a.section.slice(0, 3) !== b.section.slice(0, 3)) {\n        return false;\n      }\n      if (a.classes.length !== b.classes.length) {\n        return false;\n      }\n      for (let i = 0; i < a.classes.length; i += 1) {\n        if (!_.isEqual(a.classes[i].date, b.classes[i].date)) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return filteredSet;\n  });\n\n  const grouped = filteredCourseInfo.map((course) => {\n    const dict = _.groupBy(course, (s) => s.section[4]);\n    const groupedSectionList = [];\n    _.forEach(dict, (value, key) => {\n      groupedSectionList[key] = value;\n    });\n    return groupedSectionList;\n  });\n\n  const associatedClassList = grouped.map((course) => {\n    const primary = course[0];\n    const other = course.slice(1);\n    const rearranged = primary.map((primarySection) => {\n      const allowedComponents = other.map((component) => {\n        let allowedSections = component.filter(\n          (section) => areAssociated(primarySection, section),\n        );\n        if (_.isEmpty(allowedSections)) {\n          allowedSections = component.filter((section) => section.associated_class === 99);\n        }\n        return _.map(allowedSections, 'class_number');\n      });\n      return [[primarySection.class_number]].concat(allowedComponents);\n    });\n    return rearranged;\n  });\n\n  return {\n    courses_info: filteredCourseInfo,\n    filtered_courses: associatedClassList,\n  };\n};\n\nexport {\n  areAssociated,\n  getCourseCode,\n  formatPostData,\n};\n","import React from 'react';\nimport {\n  Button, TextField, Typography, Grid, Link,\n  Card, CardContent, CardHeader, CardMedia, CardActions,\n  CssBaseline, Snackbar, InputAdornment, Backdrop, createMuiTheme,\n  ThemeProvider, Box, CircularProgress, Dialog, DialogActions,\n  DialogContent, DialogTitle, DialogContentText,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { blue } from '@material-ui/core/colors';\nimport axios from 'axios';\nimport './index.css';\nimport { getCourseCode } from 'utils/courses';\nimport logo from 'res/icon.svg';\nimport step1 from 'res/calendar-step-1.png';\nimport step2 from 'res/calendar-step-2.png';\nimport _ from 'lodash';\n\nconst apiKey = process.env.REACT_APP_UW_API_KEY;\n\nconst snackbarWarningText = 'Your course info cannot be read. Please try again and make sure the text is not modified.';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n      light: '#6ec6ff',\n      dark: '#0069c0',\n    },\n  },\n});\n\nclass WelcomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rawCourses: '',\n      snackbarOpen: false,\n      fullPageOverlayOpen: false,\n      dialogOpen: false,\n      questId: '',\n      courseCodes: '',\n      snackbarTheme: '',\n      snackbarText: '',\n    };\n  }\n\n  validate = (nameFromCode, originalName) => {\n    const sortedUniqueNameFromCode = _.uniq(nameFromCode).sort();\n    const sortedOriginalCode = originalName.sort();\n    if (_.isEqual(sortedUniqueNameFromCode, sortedOriginalCode)) {\n      this.setState({ dialogOpen: true });\n    } else {\n      console.log('original courses and courses from course code do not match');\n      this.showSnackbar('warning', snackbarWarningText);\n    }\n  }\n\n  loadCourseInfo = (courseCodes, courseNames) => {\n    const timeout = 8000;\n    this.setState({ fullPageOverlayOpen: true });\n    const instance = axios.create({\n      baseURL: 'https://api.uwaterloo.ca/v2/courses',\n      timeout,\n    });\n    const promises = courseCodes.map((code) => instance.get(`/${code}/schedule.json`, {\n      params: {\n        key: apiKey,\n      },\n    }));\n    axios.all(promises).then((values) => {\n      const courseInfo = values.map((value) => value.data.data);\n      const subjectNamsFromCourseCodes = courseInfo.map((info) => {\n        const subjectName = getCourseCode(info[0]);\n        return subjectName;\n      });\n      this.setState({ fullPageOverlayOpen: false });\n      if (subjectNamsFromCourseCodes.includes(null)) {\n        console.log('course not found with 4-digit course number');\n        this.showSnackbar('warning', snackbarWarningText);\n      } else {\n        this.validate(subjectNamsFromCourseCodes, courseNames);\n      }\n    }).catch((error) => {\n      if (error.message === `timeout of ${timeout}ms exceeded`) {\n        this.showSnackbar('error', 'Network Timeout. Could be the problem of the server. Please try again later.');\n      } else {\n        this.showSnackbar('error', error.message);\n      }\n      console.log(error);\n      this.setState({ fullPageOverlayOpen: false });\n    });\n  }\n\n  parseCourses = (rawCourses) => {\n    const classNumbers = rawCourses.match(/^\\d{4}$/gm);\n    const courseNames = rawCourses.match(/[A-Z]{2,6} \\d{1,3}[A-Z]? - /g).map((x) => x.substring(0, x.length - 3));\n    if (rawCourses.match(/^\\d{3}$/gm).length !== classNumbers.length) {\n      console.log(\"number of course numbers and catlog numbers doesn't match\");\n      this.showSnackbar('warning', snackbarWarningText);\n      return;\n    }\n    this.setState({ courseCodes: classNumbers.map((x) => parseInt(x, 10)) });\n    this.loadCourseInfo(classNumbers, courseNames);\n  }\n\n  showSnackbar = (snackbarTheme, snackbarText) => {\n    this.setState({ snackbarTheme, snackbarText, snackbarOpen: true });\n  }\n\n  hideSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ snackbarOpen: false });\n  }\n\n  handleDialogClose = () => {\n    this.hideSnackbar();\n    this.setState({ dialogOpen: false, rawCourses: '' });\n  }\n\n  handleRawCoursesInputChange = (rawCourses) => {\n    this.setState({ rawCourses });\n  }\n\n  handleNextStepClick = () => {\n    this.hideSnackbar();\n    const { rawCourses } = this.state;\n    try {\n      this.parseCourses(rawCourses);\n    } catch (error) {\n      console.log(error);\n      this.showSnackbar('warning', snackbarWarningText);\n    }\n  }\n\n  handleEmailAddressChange = (val) => {\n    this.setState({ questId: val });\n  }\n\n  handleSubmitClick = () => {\n    const timeout = 8000;\n    const { questId, courseCodes } = this.state;\n    if (!questId) {\n      this.showSnackbar('warning', 'Email address cannot be empty!');\n      return;\n    }\n    this.setState({ fullPageOverlayOpen: true });\n    const url = 'https://qemn8c6rx9.execute-api.us-east-2.amazonaws.com/test/handlescheduleinput';\n    axios.post(url, {\n      id: questId,\n      sections: courseCodes,\n    },\n    {\n      timeout,\n    }).then((response) => {\n      console.log(response);\n      this.showSnackbar('success', 'Thank you! We will notify you by email if you win the prize.');\n      this.setState({ fullPageOverlayOpen: false });\n    }).catch((error) => {\n      if (error.message === `timeout of ${timeout}ms exceeded`) {\n        this.showSnackbar('error', 'Network Timeout. Please check your internet connection.');\n      } else {\n        this.showSnackbar('error', error.message);\n      }\n      console.log(error);\n      this.setState({ fullPageOverlayOpen: false });\n    });\n    this.handleDialogClose();\n  }\n\n  handlePaste = (rawCourses) => {\n    this.hideSnackbar();\n    console.log(rawCourses);\n    this.setState({ rawCourses });\n    try {\n      this.parseCourses(rawCourses);\n    } catch (error) {\n      console.log(error);\n      this.showSnackbar('warning', snackbarWarningText);\n    }\n  }\n\n  render() {\n    const {\n      snackbarOpen, fullPageOverlayOpen, dialogOpen, snackbarTheme, snackbarText, rawCourses,\n    } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Box p={2}>\n          <CssBaseline />\n          <Snackbar\n            open={snackbarOpen}\n            onClose={this.hideSnackbar}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert severity={snackbarTheme} onClose={this.hideSnackbar}>\n              {snackbarText}\n            </Alert>\n          </Snackbar>\n          <img src={logo} alt=\"Logo\" className=\"logo\" />\n\n          <Grid container justify=\"center\" spacing={6}>\n            <Grid item xs={12} md={4} lg={3}>\n              <Card className=\"card\" raised>\n                <CardHeader title=\"Step 1\" className=\"header\" />\n                <CardContent>\n                  <Typography variant=\"body1\">\n                    Go to&nbsp;\n                    <Link href=\"https://quest.pecs.uwaterloo.ca/psp/SS/ACADEMIC/SA/?cmd=login&languageCd=ENG\" target=\"_blank\">Quest</Link>\n                    &nbsp;and click &quot;Class Schedule&quot;.\n                  </Typography>\n                </CardContent>\n                <CardMedia\n                  image={step1}\n                  title=\"Go to Class Schedule\"\n                  className=\"step-img\"\n                />\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Card className=\"card\" raised>\n                <CardHeader title=\"Step 2\" className=\"header\" />\n                <CardContent>\n                  <Typography variant=\"body1\">Choose your term, select all and copy.</Typography>\n                </CardContent>\n                <CardMedia\n                  image={step2}\n                  title=\"Select All and Copy\"\n                  className=\"step-img\"\n                />\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Card raised style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                <CardHeader title=\"Step 3\" className=\"header\" />\n                <CardContent>\n                  <Box mb={2}>\n                    <Typography variant=\"body1\">Paste into the box below.</Typography>\n                  </Box>\n                  <TextField\n                    value={rawCourses}\n                    onPaste={(e) => this.handlePaste(e.clipboardData.getData('text/plain'))}\n                    multiline\n                    required\n                    variant=\"outlined\"\n                    fullWidth\n                    rows={14}\n                    onChange={(e) => this.handleRawCoursesInputChange(e.target.value)}\n                  />\n\n                </CardContent>\n                <CardActions className=\"stick-bottom\">\n                  <Box p={1} width={1}>\n                    <Dialog open={dialogOpen} onClose={this.handleDialogClose} aria-labelledby=\"form-dialog-title\">\n                      <DialogTitle id=\"form-dialog-title\">Submit</DialogTitle>\n                      <DialogContent>\n                        <DialogContentText>\n                          Please enter your UWaterloo ID for a chance win a prize!\n                        </DialogContentText>\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"name\"\n                          label=\"Email Address\"\n                          fullWidth\n                          InputProps={{ endAdornment: <InputAdornment position=\"end\">@uwaterloo.ca</InputAdornment> }}\n                          onChange={(e) => this.handleEmailAddressChange(e.target.value)}\n                        />\n                      </DialogContent>\n                      <DialogActions>\n                        <Button onClick={this.handleDialogClose} color=\"primary\">\n                          Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmitClick} color=\"primary\">\n                          Submit\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                  </Box>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </Box>\n        <Backdrop\n          style={{\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n          }}\n          open={fullPageOverlayOpen}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default WelcomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WelcomePage from './welcome_page/index';\n\nReactDOM.render(<WelcomePage />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/icon.47f3ae83.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-step-1.6611ddd8.png\";","module.exports = __webpack_public_path__ + \"static/media/calendar-step-2.cb8ab16f.png\";"],"sourceRoot":""}