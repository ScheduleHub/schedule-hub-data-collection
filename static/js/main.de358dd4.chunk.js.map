{"version":3,"sources":["utils/uwapi.js","utils/courses.js","components/Timetable/TimeBlock/index.jsx","components/Timetable/index.jsx","components/PreferenceSlider/index.jsx","schedule-page/index.jsx","index.jsx","res/icon.svg"],"names":["rootUrl","UWAPI","apiKey","timeout","sendUrlRequest","url","a","async","params","axios","get","baseURL","key","timeoutErrorMessage","response","data","meta","status","error","Error","message","name","sendBulkUrlRequest","urlList","instance","create","promises","map","getSubjectCodes","subjects","item","subject","getCourseNumbers","courses","catalog_number","getCourseSchedule","catalogNumber","term","undefined","classes","getCourseScheduleBulk","courseCodeList","code","split","sub","cata","getClassScheduleBulk","classNumberList","classNum","this","parseTime","classInfo","week","section","sectionType","sectionNum","c","date","start_date","end_date","start_time","end_time","weekdays","blocks","forEach","day","includes","push","startTime","endTime","blockInfo","courseCode","replace","flat","timeStringToNum","timeStr","useStyles","makeStyles","theme","paper","props","display","height","padding","spacing","border","startsWith","palette","secondary","main","ternary","sectionText","lineHeight","textAlign","whiteSpace","TimeBlock","start","duration","Box","width","position","top","Paper","variant","className","flexGrow","Typography","defaultDivider","divider","root","captionCell","backgroundColor","background","row","borderBottom","borderRight","minWidth","maxWidth","left","borderLeft","weekdayRow","zIndex","borderTop","timeColumn","hours","shortWeekdays","Timetable","schedule","value","filter","b","defaultProps","helpText","popover","pointerEvents","preferenceHeader","color","PreferenceSlider","label","helpMsg","leftLabel","rightLabel","sliderValue","onSliderValueChange","useState","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","component","gutterBottom","fontWeight","aria-owns","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","HelpOutline","fontSize","Popover","id","anchorOrigin","vertical","horizontal","onClose","disableRestoreFocus","style","Grid","container","xs","Slider","onChange","awsUrl","getSchedUrl","submitUrl","uwapi","flexDirection","overflowY","contents","overflowX","maxHeight","breakpoints","down","instrModal","alignItems","justifyContent","instrPaper","outline","loadingFullPage","drawer","mainContents","up","timetableBox","alignSelf","overflow","mobileStepper","verticalStepper","verticalStepperButton","marginRight","verticalStepperBox","common","white","welcomeLogo","marginLeft","marginTop","marginBottom","sliderBox","paddingTop","paddingBottom","thankText","spdcTheme","createMuiTheme","primary","pink","dark","light","blue","green","SchedulePage","instrModalOpen","setInstrModalOpen","selectedSchedIndex","setSelectedSchedIndex","Array","fill","firstClassSliderValues","setFirstClassSliderValues","evenDistSliderValues","setEvenDistSliderValues","clusterClassSliderValues","setClusterClassSliderValues","submitting","setSubmitting","schedules","setSchedules","classesInfo","setClassesInfo","useEffect","loadApiSchedules","sched","index","Date","getTime","all","then","values","info","prevClassesInfo","newClassesInfo","slice","console","log","catch","loadSchedules","closeInstrModal","handleBackClick","prevSelected","handleNextClick","finish","early_class","even_dist","together_class","post","createArrayChangeHandler","update","prevValue","newValue","handleFirstClassSliderChange","handleEvenDistSliderChange","handleClusterClassSliderChange","sliderGroup","length","ThemeProvider","CssBaseline","AppBar","appBar","Toolbar","Backdrop","CircularProgress","Container","Hidden","smDown","Stepper","activeStep","orientation","connector","StepConnector","verticalStepConnector","instr","Step","StepLabel","StepContent","my","Button","onClick","disabled","Divider","mdUp","MobileStepper","steps","nextButton","size","KeyboardArrowRight","backButton","KeyboardArrowLeft","Modal","BackdropProps","closeAfterTransition","disableBackdropClick","disableEscapeKeyDown","Fade","in","src","logo","alt","align","mt","mx","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.de358dd4.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst rootUrl = 'https://api.uwaterloo.ca/v2';\n\nclass UWAPI {\n  /**\n   * Creates a new UWAPI instance.\n   * @param {string} apiKey the API key.\n   */\n  constructor(apiKey, timeout = 6000) {\n    this.apiKey = apiKey;\n    this.timeout = timeout;\n  }\n\n  /**\n   * Sends a GET request to UW Open Data API.\n   * @param {string} url the URL of the endpoint.\n   * @param {Object} params parameters to send along the request.\n   */\n  sendUrlRequest = async (url, params = {}) => {\n    const response = await axios.get(url, {\n      baseURL: rootUrl,\n      params: {\n        ...params,\n        key: this.apiKey,\n      },\n      timeout: this.timeout,\n      timeoutErrorMessage: `timeout ${this.timeout}`,\n    });\n    const { meta, data } = response.data;\n    if (meta.status !== 200) {\n      const error = Error(meta.message);\n      error.name = `UW ${meta.status}`;\n      throw error;\n    }\n    return data;\n  }\n\n  /**\n   * Sends multiple GET requests to UW Open Data API.\n   * @param {string[]} urlList the URLs of the endpoints.\n   * @param {Object} params parameters to send along each request.\n   */\n  sendBulkUrlRequest = (urlList, params = {}) => {\n    const instance = axios.create({\n      baseURL: rootUrl,\n      timeout: this.timeout,\n      timeoutErrorMessage: `timeout ${this.timeout}`,\n    });\n    const promises = urlList.map((url) => instance.get(url, {\n      params: {\n        ...params,\n        key: this.apiKey,\n      },\n    }));\n    return promises;\n  }\n\n  /**\n   * Returns all available subject codes.\n   */\n  getSubjectCodes = async () => {\n    const subjects = await this.sendUrlRequest('/codes/subjects.json');\n    return subjects.map((item) => item.subject);\n  }\n\n  /**\n   * Returns all available catalog numbers (course numbers) for a subject.\n   * @param {string} subject\n   */\n  getCourseNumbers = async (subject) => {\n    const courses = await this.sendUrlRequest(`/courses/${subject}.json`);\n    return courses.map((item) => item.catalog_number);\n  }\n\n  /**\n   * Returns the schedule of a course.\n   * @param {string} subject\n   * @param {string | number} catalogNumber\n   * @param {number} term the term to get schedules for.\n   */\n  getCourseSchedule = async (subject, catalogNumber, term = undefined) => {\n    const url = `/courses/${subject}/${catalogNumber}/schedule.json`;\n    const classes = await this.sendUrlRequest(url, { term });\n    return classes;\n  }\n\n  /**\n   * Returns the schedules of multiple courses.\n   * @param {string[]} courseCodeList the list of courses to get schedules for.\n   * @param {number} term the term to get schedules for.\n   */\n  getCourseScheduleBulk = (courseCodeList, term = undefined) => {\n    const urlList = courseCodeList.map((code) => {\n      const [sub, cata] = code.split(' ');\n      return `/courses/${sub}/${cata}/schedule.json`;\n    });\n    return this.sendBulkUrlRequest(urlList, { term });\n  }\n\n  /**\n   * Returns the schedules of multiple classes.\n   * @param {number[]} classNumberList the list of classes to get schedules for.\n   * @param {number} term the term to get schedules for.\n   */\n  getClassScheduleBulk = (classNumberList, term = undefined) => {\n    const urlList = classNumberList.map((classNum) => `/courses/${classNum}/schedule.json`);\n    return this.sendBulkUrlRequest(urlList, { term });\n  }\n}\n\nexport default UWAPI;\n","/* eslint-disable camelcase */\nimport _ from 'lodash';\n\n/**\n * @typedef {{ courseCode: string, keepable: boolean, keep: boolean }} CurrentCourse\n */\n\n/**\n * @typedef {Object} ClassInfo\n * @property {string} subject\n * @property {number} catalog_number\n * @property {number} class_number\n * @property {number} associated_class\n * @property {string} section\n * @property {string} campus\n * @property {ClassTimeInfo[]} classes\n */\n\n/**\n * @typedef {Object} ClassTimeInfo\n * @property {ClassDate} date\n * @property {{building: string, room: string}} location\n * @property {string[]} instructors\n*/\n\n/**\n * @typedef {Object} ClassDate\n * @property {string} start_time\n * @property {string} end_time\n * @property {string} start_date\n * @property {string} end_date\n * @property {string} weekdays\n * @property {boolean} is_tba\n * @property {boolean} is_cancelled\n * @property {boolean} is_closed\n */\n\n/**\n * Determines whether two classes are associated.\n * @param {ClassInfo} classInfo1 the ClassInfo object to compare.\n * @param {ClassInfo} classInfo2 the other ClassInfo object to compare.\n */\nconst areAssociated = (classInfo1, classInfo2) => (\n  classInfo1.associated_class === classInfo2.associated_class\n);\n\n/**\n * Returns the course code of a class.\n * @param {ClassInfo} classInfo the ClassInfo object to get course code from.\n */\nconst getCourseCode = (classInfo) => (classInfo === undefined ? null : `${classInfo.subject} ${classInfo.catalog_number}`);\n\n/**\n * Determines whether a class in online or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isOnline = (classInfo) => classInfo.campus === 'ONLN ONLINE';\n\n/**\n * Determines whether a class in closed or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isClosed = (classInfo) => classInfo.classes.some((value) => value.date.is_closed);\n\n/**\n * Formats data for use in back-end.\n * @param {CurrentCourse[]} currentCourses the list of current courses.\n * @param {number[]} currentClasses the list of current class numbers.\n * @param {ClassInfo[][]} courseInfo the courses information obtained from API.\n */\nconst formatPostData = (currentCourses, currentClasses, courseInfo) => {\n  const currentCoursesDict = _.keyBy(currentCourses, 'courseCode');\n\n  const filteredCourseInfo = courseInfo.map((course) => {\n    let filtered = course.filter((s) => !isClosed(s) && !isOnline(s));\n    const keepUnchanged = currentCoursesDict[getCourseCode(course[0])].keep;\n    if (keepUnchanged) {\n      filtered = filtered.filter((section) => currentClasses.includes(section.class_number));\n    }\n    const filteredSet = _.uniqWith(filtered, (a, b) => {\n      if (a.associated_class !== b.associated_class) {\n        return false;\n      }\n      if (a.section.slice(0, 3) !== b.section.slice(0, 3)) {\n        return false;\n      }\n      if (a.classes.length !== b.classes.length) {\n        return false;\n      }\n      for (let i = 0; i < a.classes.length; i += 1) {\n        if (!_.isEqual(a.classes[i].date, b.classes[i].date)) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return filteredSet;\n  });\n\n  const grouped = filteredCourseInfo.map((course) => {\n    const dict = _.groupBy(course, (s) => s.section[4]);\n    const groupedSectionList = [];\n    _.forEach(dict, (value, key) => {\n      groupedSectionList[key] = value;\n    });\n    return groupedSectionList;\n  });\n\n  const associatedClassList = grouped.map((course) => {\n    const primary = course[0];\n    const other = course.slice(1);\n    const rearranged = primary.map((primarySection) => {\n      const allowedComponents = other.map((component) => {\n        let allowedSections = component.filter(\n          (section) => areAssociated(primarySection, section),\n        );\n        if (_.isEmpty(allowedSections)) {\n          allowedSections = component.filter((section) => section.associated_class === 99);\n        }\n        return _.map(allowedSections, 'class_number');\n      });\n      return [[primarySection.class_number]].concat(allowedComponents);\n    });\n    return rearranged;\n  });\n\n  return {\n    courses_info: filteredCourseInfo,\n    filtered_courses: associatedClassList,\n  };\n};\n\n/**\n * Parses a ClassInfo object into an array of time blocks.\n * @param {ClassInfo} classInfo the ClassInfo object to parse.\n */\nconst parseTime = (classInfo) => {\n  const week = ['Th', 'M', 'T', 'W', 'F'];\n  const { subject, catalog_number, section } = classInfo;\n  const [sectionType, sectionNum] = section.split(' ');\n  return classInfo.classes.map((c) => {\n    const {\n      start_date, end_date, start_time, end_time,\n    } = c.date;\n    let { weekdays } = c.date;\n    if (start_date || end_date) return [];\n    const blocks = [];\n    week.forEach((day) => {\n      if (weekdays.includes(day)) {\n        blocks.push({\n          day,\n          startTime: start_time,\n          endTime: end_time,\n          blockInfo: {\n            courseCode: `${subject} ${catalog_number}`,\n            sectionType,\n            sectionNum,\n          },\n        });\n        weekdays = weekdays.replace(day, '');\n      }\n    });\n    return blocks;\n  }).flat();\n};\n\nexport {\n  areAssociated,\n  getCourseCode,\n  formatPostData,\n  parseTime,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, Typography, Paper, makeStyles,\n} from '@material-ui/core';\n\nconst hourBlockHeight = 64;\nconst blockWidth = 128;\n\nconst timeStringToNum = (timeStr) => {\n  const [h, m] = timeStr.split(':');\n  return h * 6 + m / 10;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: (props) => ({\n    display: 'flex',\n    height: '100%',\n    padding: theme.spacing(0.5),\n    border: props.blockInfo.sectionNum.startsWith('0')\n      ? `1px solid ${theme.palette.secondary.main}`\n      : `1px solid ${theme.palette.ternary.main}`,\n  }),\n  sectionText: {\n    lineHeight: 1.2,\n    textAlign: 'right',\n    whiteSpace: 'pre',\n  },\n}));\n\nconst propTypes = {\n  startTime: PropTypes.string.isRequired,\n  endTime: PropTypes.string.isRequired,\n  blockInfo: PropTypes.shape({\n    courseCode: PropTypes.string.isRequired,\n    sectionType: PropTypes.string.isRequired,\n    sectionNum: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nfunction TimeBlock(props) {\n  const classes = useStyles(props);\n\n  const { startTime, endTime, blockInfo } = props;\n  const { courseCode, sectionType, sectionNum } = blockInfo;\n\n  const start = timeStringToNum(startTime);\n  const end = timeStringToNum(endTime);\n  const duration = end - start;\n\n  return (\n    <Box\n      height={duration * (hourBlockHeight / 6)}\n      width={blockWidth}\n      position=\"absolute\"\n      top={(start - timeStringToNum('8:00')) * (hourBlockHeight / 6)}\n    >\n      <Paper variant=\"outlined\" className={classes.paper}>\n        <Box flexGrow={1}>\n          <Typography variant=\"body2\" display=\"block\">\n            {courseCode}\n          </Typography>\n          <Typography variant=\"caption\" display=\"block\">\n            {`${startTime}-${endTime}`}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"caption\" display=\"block\" className={classes.sectionText}>\n            {`${sectionType}\\n${sectionNum}`}\n          </Typography>\n        </Box>\n      </Paper>\n    </Box>\n  );\n}\n\nTimeBlock.propTypes = propTypes;\n\nexport { TimeBlock as default, hourBlockHeight, blockWidth };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles, Box, Typography,\n} from '@material-ui/core';\nimport { parseTime } from 'utils/courses';\nimport TimeBlock, { hourBlockHeight, blockWidth } from './TimeBlock';\n\nconst useStyles = makeStyles((theme) => {\n  const defaultDivider = `1px solid ${theme.palette.divider}`;\n  const timeColumnWidth = 72;\n  return {\n    root: {\n      display: 'table',\n    },\n    captionCell: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n    },\n    row: {\n      display: 'table-row',\n      '& > *': {\n        display: 'table-cell',\n        position: 'sticky',\n        borderBottom: defaultDivider,\n        borderRight: defaultDivider,\n        width: blockWidth,\n        minWidth: blockWidth,\n        maxWidth: blockWidth,\n      },\n      '& > *:first-child': {\n        left: 0,\n        borderLeft: defaultDivider,\n        width: timeColumnWidth,\n        minWidth: timeColumnWidth,\n        maxWidth: timeColumnWidth,\n      },\n    },\n    weekdayRow: {\n      '& > *': {\n        position: 'sticky',\n        top: 0,\n        zIndex: 3,\n        borderTop: defaultDivider,\n      },\n      '& > *:first-child': {\n        zIndex: 4,\n      },\n    },\n    timeColumn: {\n      zIndex: 2,\n      '& > *': {\n        borderBottom: defaultDivider,\n        height: hourBlockHeight,\n      },\n      '& > *:last-child': {\n        borderBottom: 'none',\n      },\n    },\n  };\n});\n\nconst hours = [\n  '8 am', '9 am', '10 am', '11 am', '12 pm',\n  '1 pm', '2 pm', '3 pm', '4 pm', '5 pm',\n  '6 pm', '7 pm', '8 pm', '9 pm', '10 pm',\n];\n\nconst weekdays = [\n  'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n];\nconst shortWeekdays = ['M', 'T', 'W', 'Th', 'F'];\n\nfunction Timetable(props) {\n  const classes = useStyles();\n\n  const { schedule } = props;\n  const blocks = (schedule || []).map(parseTime).flat();\n\n  return (\n    <div className={classes.root}>\n      <Box className={`${classes.row} ${classes.weekdayRow}`}>\n        <Box className={classes.captionCell} />\n        {weekdays.map((value) => (\n          <Typography variant=\"subtitle2\" key={value} className={classes.captionCell}>\n            {value}\n          </Typography>\n        ))}\n      </Box>\n      <Box className={classes.row}>\n        <Box className={classes.timeColumn}>\n          {hours.map((value) => (\n            <Typography variant=\"subtitle2\" key={value} className={classes.captionCell}>\n              {value}\n            </Typography>\n          ))}\n        </Box>\n        {shortWeekdays.map((day) => (\n          <Box position=\"relative\" key={day}>\n            {blocks.filter((b) => b.day === day).map((b) => (\n              <TimeBlock\n                key={`${day}${b.startTime}`}\n                startTime={b.startTime}\n                endTime={b.endTime}\n                blockInfo={b.blockInfo}\n              />\n            ))}\n          </Box>\n        ))}\n      </Box>\n    </div>\n  );\n}\n\nTimetable.propTypes = {\n  schedule: PropTypes.arrayOf(PropTypes.shape({\n    day: PropTypes.string,\n    startTime: PropTypes.string,\n    endTime: PropTypes.string,\n    blockInfo: PropTypes.shape({\n      courseCode: PropTypes.string,\n      sectionType: PropTypes.string,\n      sectionNum: PropTypes.string,\n    }),\n  })),\n};\n\nTimetable.defaultProps = {\n  schedule: [],\n};\n\nexport default Timetable;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Grid,\n  Popover,\n  Slider,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport { HelpOutline } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  helpText: {\n    whiteSpace: 'pre',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n  popover: {\n    pointerEvents: 'none',\n  },\n  preferenceHeader: {\n    color: '#666666',\n  },\n}));\n\nconst propTypes = {\n  label: PropTypes.string.isRequired,\n  helpMsg: PropTypes.string.isRequired,\n  leftLabel: PropTypes.string.isRequired,\n  rightLabel: PropTypes.string.isRequired,\n  sliderValue: PropTypes.number.isRequired,\n  onSliderValueChange: PropTypes.func.isRequired,\n};\n\nfunction PreferenceSlider(props) {\n  const {\n    label, helpMsg, leftLabel, rightLabel, sliderValue, onSliderValueChange,\n  } = props;\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <Box>\n      <Typography\n        component=\"span\"\n        gutterBottom\n        className={classes.preferenceHeader}\n      >\n        <Box display=\"inline\" fontWeight=\"fontWeightMedium\">{`${label} `}</Box>\n        <Typography\n          display=\"inline\"\n          aria-owns={open ? 'mouse-over-popover' : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopoverOpen}\n          onMouseLeave={handlePopoverClose}\n        >\n          <HelpOutline\n            color=\"action\"\n            fontSize=\"small\"\n          />\n        </Typography>\n        <Popover\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          classes={{\n            paper: classes.paper,\n          }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          onClose={handlePopoverClose}\n          disableRestoreFocus\n        >\n          <Typography style={{ whiteSpace: 'pre' }}>{helpMsg}</Typography>\n        </Popover>\n      </Typography>\n      <Grid container spacing={1}>\n        <Grid item>\n          <Typography color=\"textSecondary\">{leftLabel}</Typography>\n        </Grid>\n        <Grid item xs>\n          <Slider\n            display=\"inline\"\n            value={sliderValue}\n            onChange={onSliderValueChange}\n          />\n        </Grid>\n        <Grid item>\n          <Typography color=\"textSecondary\">{rightLabel}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nPreferenceSlider.propTypes = propTypes;\n\nexport default PreferenceSlider;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Divider,\n  Fade,\n  Hidden,\n  MobileStepper,\n  Modal,\n  Paper,\n  Stepper,\n  StepConnector,\n  StepContent,\n  StepLabel,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n  createMuiTheme,\n  makeStyles,\n  Step,\n  Backdrop,\n  CircularProgress,\n} from '@material-ui/core';\nimport { blue, pink, green } from '@material-ui/core/colors';\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\nimport axios from 'axios';\nimport UWAPI from 'utils/uwapi';\nimport logo from 'res/icon.svg';\nimport Timetable from 'components/Timetable';\nimport PreferenceSlider from 'components/PreferenceSlider';\n\nconst awsUrl = 'https://qemn8c6rx9.execute-api.us-east-2.amazonaws.com/test';\nconst getSchedUrl = `${awsUrl}/returnscheduleforrating`;\nconst submitUrl = `${awsUrl}/handleuserrating`;\n\nconst apiKey = '4ad350333dc3859b91bcf443d14e4bf0';\nconst uwapi = new UWAPI(apiKey, null);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflowY: 'hidden',\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    overflowX: 'hidden',\n    maxHeight: '100%',\n    [theme.breakpoints.down('xs')]: {\n      padding: 0,\n    },\n  },\n  instrModal: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  instrPaper: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: theme.spacing(2),\n  },\n  loadingFullPage: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  mainContents: {\n    [theme.breakpoints.down('xs')]: {\n      padding: 0,\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(2),\n    },\n    flexGrow: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  timetableBox: {\n    // TODO: change the size\n    // width: '100%',\n    display: 'inline-block',\n    maxWidth: '100%',\n    // maxHeight: '80%',\n    alignSelf: 'flex-start',\n    overflow: 'auto',\n    border: `2px solid ${theme.palette.divider}`,\n  },\n  mobileStepper: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n  },\n  verticalStepper: {\n    alignSelf: 'flex-start',\n  },\n  verticalStepperButton: {\n    marginRight: theme.spacing(1),\n  },\n  verticalStepperBox: {\n    display: 'flex',\n    backgroundColor: theme.palette.common.white,\n    width: '25%',\n    overflowY: 'auto',\n  },\n  welcomeLogo: {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    width: 128,\n  },\n  sliderBox: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(1),\n    },\n  },\n  thankText: {\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nconst spdcTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: pink[300],\n      dark: '#ba2d65',\n      light: '#ff94c2',\n    },\n    secondary: {\n      main: blue[500],\n      light: '#6ec6ff',\n      dark: '#0069c0',\n    },\n    ternary: {\n      main: green[500],\n      light: '#80e27e',\n      dark: '#087f23',\n    },\n  },\n});\n\n/*\n0   terrible\n20  bad\n40  below average\n60  above average\n80  good\n100 excellent\n*/\n\nfunction SchedulePage() {\n  const classes = useStyles();\n\n  // UI states\n  const [instrModalOpen, setInstrModalOpen] = useState(true);\n  const [selectedSchedIndex, setSelectedSchedIndex] = useState(0);\n  const [firstClassSliderValues, setFirstClassSliderValues] = useState(Array(5).fill(50));\n  const [evenDistSliderValues, setEvenDistSliderValues] = useState(Array(5).fill(50));\n  const [clusterClassSliderValues, setClusterClassSliderValues] = useState(Array(5).fill(50));\n  const [submitting, setSubmitting] = useState(false);\n\n  // Data states\n  const [schedules, setSchedules] = useState([]);\n  const [classesInfo, setClassesInfo] = useState(Array(5).fill(undefined));\n\n  useEffect(\n    () => {\n      const loadApiSchedules = (sched, index) => {\n        const start = new Date().getTime();\n        const promises = uwapi.getClassScheduleBulk(sched);\n        axios.all(promises).then((values) => {\n          const info = values.map((item) => item.data.data[0]);\n          setClassesInfo((prevClassesInfo) => {\n            const newClassesInfo = prevClassesInfo.slice();\n            newClassesInfo[index] = info;\n            return newClassesInfo;\n          });\n          console.log(info);\n          console.log(new Date().getTime() - start);\n        }).catch((error) => {\n          console.log(error);\n        });\n      };\n\n      const loadSchedules = async () => {\n        try {\n          const response = await axios.get(getSchedUrl, { timeout: 5000 });\n          const { data } = response;\n          console.log(data);\n          setSchedules(data);\n          data.forEach((sched, index) => loadApiSchedules(sched.schedule, index));\n        } catch (error) {\n          console.log(error.message);\n        }\n      };\n      loadSchedules();\n    },\n    [],\n  );\n\n  const closeInstrModal = () => setInstrModalOpen(false);\n\n  const handleBackClick = () => setSelectedSchedIndex((prevSelected) => prevSelected - 1);\n\n  const handleNextClick = (finish) => {\n    if (finish) {\n      setSubmitting(true);\n      const data = schedules.map((value, index) => ({\n        id: value.id,\n        early_class: firstClassSliderValues[index] / 100,\n        even_dist: evenDistSliderValues[index] / 100,\n        together_class: clusterClassSliderValues[index] / 100,\n      }));\n      console.log(data);\n      axios.post(submitUrl, data).then((value) => {\n        setSelectedSchedIndex((prevSelected) => prevSelected + 1);\n        setSubmitting(false);\n      }).catch((error) => {\n        console.log(error.message);\n      });\n    } else {\n      setSelectedSchedIndex((prevSelected) => prevSelected + 1);\n    }\n  };\n\n  const createArrayChangeHandler = (update) => ((event, value) => {\n    update((prevValue) => {\n      const newValue = prevValue.slice();\n      newValue[selectedSchedIndex] = value;\n      return newValue;\n    });\n  });\n\n  const handleFirstClassSliderChange = createArrayChangeHandler(setFirstClassSliderValues);\n\n  const handleEvenDistSliderChange = createArrayChangeHandler(setEvenDistSliderValues);\n\n  const handleClusterClassSliderChange = createArrayChangeHandler(setClusterClassSliderValues);\n\n  const createStep = (key, label, instr) => (\n    <Step key={key}>\n      <StepLabel>{label}</StepLabel>\n      <StepContent>\n        <Typography>{instr}</Typography>\n        <Box my={2}>\n          <Button\n            className={classes.verticalStepperButton}\n            onClick={handleBackClick}\n            disabled={selectedSchedIndex === 0 || selectedSchedIndex === schedules.length}\n          >\n            Back\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.verticalStepperButton}\n            onClick={() => handleNextClick(selectedSchedIndex + 1 >= schedules.length)}\n          >\n            {selectedSchedIndex + 1 >= schedules.length ? 'Finish' : 'Next'}\n          </Button>\n        </Box>\n      </StepContent>\n    </Step>\n  );\n\n  const sliderGroup = selectedSchedIndex < schedules.length && (\n    <Box className={classes.sliderBox}>\n      <PreferenceSlider\n        label=\"First class\"\n        helpMsg=\"In general, do the days start early or late?\"\n        leftLabel=\"Early\"\n        rightLabel=\"Late\"\n        sliderValue={firstClassSliderValues[selectedSchedIndex]}\n        onSliderValueChange={handleFirstClassSliderChange}\n      />\n      <PreferenceSlider\n        label=\"Even Distribution\"\n        helpMsg=\"Does the schedule has approximately the same number of classes every day?\"\n        leftLabel=\"Even\"\n        rightLabel=\"Uneven\"\n        sliderValue={evenDistSliderValues[selectedSchedIndex]}\n        onSliderValueChange={handleEvenDistSliderChange}\n      />\n      <PreferenceSlider\n        label=\"Cluster Classes\"\n        helpMsg=\"Are the classes back to back or more separated from each other?\"\n        leftLabel=\"Together\"\n        rightLabel=\"Separate\"\n        sliderValue={clusterClassSliderValues[selectedSchedIndex]}\n        onSliderValueChange={handleClusterClassSliderChange}\n      />\n    </Box>\n  );\n\n  return (\n    <ThemeProvider theme={spdcTheme}>\n      <CssBaseline />\n\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\">Schedule Planner Data Collection</Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Backdrop\n          open={(\n            submitting\n            || (selectedSchedIndex < schedules.length && !classesInfo[selectedSchedIndex])\n          )}\n          className={classes.loadingFullPage}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n\n        <Container maxWidth=\"xl\" className={classes.contents}>\n          <Hidden smDown>\n            <Box className={classes.verticalStepperBox}>\n              <Stepper\n                activeStep={selectedSchedIndex}\n                orientation=\"vertical\"\n                className={classes.verticalStepper}\n                connector={<StepConnector className={classes.verticalStepConnector} />}\n              >\n                {schedules.map((value, index) => (\n                  createStep(\n                    value.id,\n                    `Schedule ${index + 1}`,\n                    'Read the schedule and rate its timing.',\n                  )\n                ))}\n              </Stepper>\n            </Box>\n            <Divider orientation=\"vertical\" />\n          </Hidden>\n\n          {selectedSchedIndex < schedules.length ? (\n            <Box className={classes.mainContents}>\n              {/* TODO: fix padding on phones */}\n              <Box className={classes.timetableBox}>\n                <Timetable schedule={classesInfo[selectedSchedIndex]} />\n              </Box>\n              {sliderGroup}\n            </Box>\n          ) : (\n            <Box className={classes.mainContents}>\n              <Typography className={classes.thankText}>\n                Thank you! Your ratings have been submitted.\n              </Typography>\n            </Box>\n          )}\n        </Container>\n\n        <Hidden mdUp>\n          {selectedSchedIndex < schedules.length && (\n            <MobileStepper\n              variant=\"dots\"\n              steps={schedules.length}\n              position=\"static\"\n              className={classes.mobileStepper}\n              activeStep={selectedSchedIndex}\n              nextButton={(\n                <Button\n                  size=\"medium\"\n                  onClick={() => handleNextClick(selectedSchedIndex + 1 >= schedules.length)}\n                >\n                  {selectedSchedIndex + 1 === schedules.length ? 'Finish' : 'Next'}\n                  <KeyboardArrowRight />\n                </Button>\n            )}\n              backButton={(\n                <Button\n                  size=\"medium\"\n                  onClick={handleBackClick}\n                  disabled={selectedSchedIndex === 0}\n                >\n                  <KeyboardArrowLeft />\n                  Back\n                </Button>\n            )}\n            />\n          )}\n        </Hidden>\n      </div>\n\n      <Modal\n        open={instrModalOpen}\n        onClose={closeInstrModal}\n        BackdropProps={{ timeout: 500 }}\n        className={classes.instrModal}\n        closeAfterTransition\n        disableBackdropClick\n        disableEscapeKeyDown\n      >\n        <Fade in={instrModalOpen}>\n          <Paper className={classes.instrPaper}>\n            <Typography variant=\"h2\" color=\"primary\">Welcome!</Typography>\n            <img src={logo} alt=\"Schedule Planner Data Collection\" className={classes.welcomeLogo} />\n            <Typography gutterBottom align=\"center\">\n              You will be given 5 class schedules.\n              Please rate each schedule based on its timing (not the subjects).\n            </Typography>\n            <Box mt={2} mx=\"auto\">\n              <Button variant=\"outlined\" color=\"primary\" onClick={closeInstrModal}>\n                Get started\n              </Button>\n            </Box>\n          </Paper>\n        </Fade>\n      </Modal>\n    </ThemeProvider>\n  );\n}\n\nexport default SchedulePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SchedulePage from './schedule-page';\n\nReactDOM.render(<SchedulePage />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/icon.a7b1598b.svg\";"],"sourceRoot":""}